interface IconProps {
  isHovered: boolean;
}

export const Github = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={17}
      height={14}
      viewBox="0 0 17 14"
      fill="none"
    >
      <path
        d="M16.6912 10.074L16.6466 10.2511C16.58 10.4281 16.4914 10.6052 16.4249 10.7823C16.4249 10.8269 16.3802 10.9154 16.3583 10.9594C15.65 12.5311 14.3219 13.2833 12.2636 13.6601C12.1531 13.6821 11.9533 13.7267 11.7543 13.7487C9.76184 13.9923 8.2567 14.0362 6.26495 13.8592C6.19837 13.8592 6.10983 13.8372 6.06591 13.8372C3.29928 13.527 1.66097 12.5311 0.79755 10.9374C0.775593 10.9154 0.73097 10.8489 0.709012 10.7603C0.620474 10.6052 0.553894 10.4062 0.487313 10.2511C0.44269 10.1625 0.420732 10.1179 0.398775 10.052C0.111204 9.23322 0 8.28126 0 7.21881C0 5.35951 0.575851 4.62925 1.35003 3.63267C0.752219 1.50775 1.59368 0.0465235 1.59368 0.0465235C1.59368 0.0465235 2.85517 -0.21909 5.2457 1.48509C6.52985 0.931904 9.96017 0.88728 11.5985 1.37459C12.5943 0.710205 14.4317 -0.21909 15.1846 0.0465235C15.3617 0.356761 15.7824 1.28606 15.4283 3.34439C15.6719 3.78708 17 4.76099 17 7.48371C16.978 8.47959 16.8668 9.34301 16.6898 10.0733L16.6912 10.074ZM2.19291 9.43226C2.19291 11.8894 3.91975 12.9738 6.33224 13.1728C6.48735 13.1948 6.64247 13.1948 6.81955 13.2174C7.94859 13.2394 9.36519 13.2621 10.7598 13.2174C11.0701 13.1955 11.3796 13.1728 11.6672 13.1289C13.9692 12.7967 14.9211 11.4686 14.9211 9.60933C14.9211 8.25931 14.3014 6.48855 11.8223 6.48855C11.6452 6.48855 10.184 6.66562 8.79005 6.66562C7.21832 6.66562 5.60268 6.48855 5.35903 6.48855C2.81338 6.48855 2.19291 8.50296 2.19291 9.43226ZM5.11466 8.30322C5.60197 8.30322 5.97808 8.87907 5.97808 9.58738C5.97808 10.2957 5.60197 10.8715 5.11466 10.8715C4.62735 10.8715 4.2732 10.2957 4.2732 9.58738C4.2732 8.87907 4.62735 8.30322 5.11466 8.30322ZM12.2643 10.8708C11.755 10.8708 11.3789 10.295 11.3789 9.58667C11.3789 8.87836 11.755 8.30251 12.2643 8.30251C12.7516 8.30251 13.1277 8.87836 13.1277 9.58667C13.1277 10.295 12.7516 10.8708 12.2643 10.8708ZM8.5896 11.4906C8.3679 11.4906 8.19083 11.2916 8.19083 11.0699C8.19083 10.8708 8.3679 10.6937 8.5896 10.6937C8.8113 10.6937 9.01033 10.8708 9.01033 11.0699C9.01033 11.2916 8.8113 11.4906 8.5896 11.4906ZM8.61156 12.8187C7.96983 12.8187 7.46056 12.2655 7.46056 11.9333C7.46056 11.8001 7.5491 11.6896 7.68226 11.6896C7.81542 11.6896 7.90396 11.8001 7.90396 11.9333C7.92592 11.9999 8.2142 12.376 8.61227 12.376C8.9225 12.376 9.21007 12.1104 9.21007 11.9333C9.21007 11.8001 9.32057 11.6896 9.43177 11.6896C9.56493 11.6896 9.67543 11.8001 9.67543 11.9333C9.67543 12.3321 9.23274 12.8187 8.61297 12.8187H8.61156Z"
        fill="white"
      />
    </svg>
  );
};
export const Resume = () => {
  return (
    <svg
      width={14}
      height={18}
      viewBox="0 0 14 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7.68029 8.47266C7.46623 8.54413 7.23788 8.58382 7.00015 8.58382C6.76243 8.58382 6.53405 8.54413 6.31998 8.47266C4.76499 8.72802 3.95117 9.87091 3.95117 11.2578H7.00015H10.0491C10.0491 9.87091 9.23542 8.72802 7.68029 8.47266Z"
        fill="white"
      />
      <path
        d="M7.00081 8.09055C7.9226 8.09055 8.66958 7.34317 8.66958 6.42151V5.94811C8.66958 5.02645 7.9226 4.2793 7.00081 4.2793C6.07901 4.2793 5.33203 5.02645 5.33203 5.94811V6.42151C5.33203 7.34317 6.07901 8.09055 7.00081 8.09055Z"
        fill="white"
      />
      <path
        d="M11.1133 0H2.8861C1.29495 0 0 1.29522 0 2.88667V14.3199C0 15.9113 1.29495 17.206 2.8861 17.206H9.79856H10.2413L10.5544 16.8934L13.6874 13.7604L14 13.4475V13.0048V2.88667C14 1.29522 12.7051 0 11.1133 0ZM12.9312 13.0048H11.3133C10.4771 13.0048 9.79852 13.683 9.79852 14.5195V16.1372H2.8861C1.88244 16.1372 1.06879 15.3232 1.06879 14.3199V2.88667C1.06879 1.88274 1.88244 1.06875 2.8861 1.06875H11.1133C12.1173 1.06875 12.9312 1.88274 12.9312 2.88667V13.0048H12.9312Z"
        fill="white"
      />
    </svg>
  );
};
export const XTwitter = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={36}
      height={36}
      viewBox="0 0 36 36"
      fill="none"
    >
      <g clipPath="url(#clip0_783_10)">
        <path
          d="M27.8712 0H8.12883C3.6394 0 0 3.6394 0 8.12883V27.7052C0 32.1947 3.6394 35.8341 8.12883 35.8341H27.8712C32.3606 35.8341 36 32.1947 36 27.7052V8.12883C36 3.6394 32.3606 0 27.8712 0Z"
          fill="#0F0F0F"
        />
        <path
          d="M22.7631 10.4316H25.3028L19.7545 16.7738L26.2816 25.4033H21.1705L17.1677 20.1699L12.5868 25.4033H10.0457L15.9801 18.6202L9.71875 10.4316H14.9591L18.5774 15.2157L22.7631 10.4316ZM21.8716 23.8831H23.2792L14.1948 11.8723H12.6845L21.8716 23.8831Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_783_10">
          <rect width={36} height="35.8341" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const LinkedIn = () => {
  return (
    <svg
      width={14}
      height={14}
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_788_827)">
        <path
          d="M3.25899 4.50391H0.448463C0.323727 4.50391 0.222656 4.60502 0.222656 4.72971V13.7587C0.222656 13.8835 0.323727 13.9845 0.448463 13.9845H3.25899C3.38372 13.9845 3.48479 13.8835 3.48479 13.7587V4.72971C3.48479 4.60502 3.38372 4.50391 3.25899 4.50391Z"
          fill="white"
        />
        <path
          d="M1.85459 0.015625C0.831961 0.015625 0 0.846683 0 1.86819C0 2.89014 0.831961 3.72152 1.85459 3.72152C2.87641 3.72152 3.7077 2.8901 3.7077 1.86819C3.70774 0.846683 2.87641 0.015625 1.85459 0.015625Z"
          fill="white"
        />
        <path
          d="M10.4075 4.2793C9.27867 4.2793 8.44422 4.76455 7.9381 5.31593V4.72951C7.9381 4.60482 7.83703 4.5037 7.7123 4.5037H5.02073C4.89599 4.5037 4.79492 4.60482 4.79492 4.72951V13.7585C4.79492 13.8833 4.89599 13.9843 5.02073 13.9843H7.82511C7.94984 13.9843 8.05092 13.8833 8.05092 13.7585V9.29125C8.05092 7.78589 8.45981 7.19943 9.50917 7.19943C10.652 7.19943 10.7428 8.13959 10.7428 9.3687V13.7586C10.7428 13.8833 10.8439 13.9844 10.9687 13.9844H13.7741C13.8988 13.9844 13.9999 13.8833 13.9999 13.7586V8.80599C13.9999 6.56757 13.5731 4.2793 10.4075 4.2793Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_788_827">
          <rect width={14} height={14} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const Medium = () => {
  return (
    <svg
      width={14}
      height={14}
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3.94849 10.9922C6.12918 10.9922 7.89684 9.21219 7.89684 7.0166C7.89684 4.82102 6.12905 3.04115 3.94849 3.04115C1.76793 3.04115 0 4.82102 0 7.0166C0 9.21219 1.76779 10.9922 3.94849 10.9922ZM10.2539 10.7593C11.3443 10.7593 12.2282 9.08381 12.2282 7.0166H12.2283C12.2283 4.94993 11.3444 3.2739 10.2541 3.2739C9.16373 3.2739 8.27983 4.94993 8.27983 7.0166C8.27983 9.08327 9.16359 10.7593 10.2539 10.7593ZM13.3057 10.3695C13.689 10.3695 14 8.86837 14 7.0166C14 5.16537 13.6892 3.66373 13.3057 3.66373C12.9221 3.66373 12.6114 5.16497 12.6114 7.0166C12.6114 8.86824 12.9223 10.3695 13.3057 10.3695Z"
        fill="white"
      />
    </svg>
  );
};
export const PlusIcon = () => {
  return (
    <svg
      width="15"
      height="15"
      viewBox="0 0 15 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M7.5 0V15M0 7.5H15" stroke="#707070" />
    </svg>
  );
};

//! Flutter Icon
export const FlutterIcon: React.FC<IconProps> = ({ isHovered }) => {
  const fillColor = isHovered ? "#40D0FD" : "white";
  const secondaryColor = isHovered ? "#0E5199" : "#C3C3C3";
  const secondaryColor2 = isHovered ? "#41D0FD" : "#C3C3C3";
  const secondaryColor3 = isHovered ? "#1FBCFD" : "#C3C3C3";
  const secondaryColor4 = isHovered ? "#095A9D" : "#C3C3C3";

  return (
    <svg
      width={36}
      height={36}
      viewBox="0 0 36 36"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.3066 20.6051L21.0878 16.9219H30.4804L22.1599 25.2424L17.3066 20.6051Z"
        fill={fillColor}
      />
      <path
        d="M5.51953 18.142L10.2434 22.9783L30.4788 2.57422H21.0862L5.51953 18.142Z"
        fill={secondaryColor2}
      />
      <path
        d="M12.5742 25.2888L17.3656 30.0093L22.1603 25.2427L17.3071 20.6055L12.5742 25.2888Z"
        fill={secondaryColor3}
      />
      <path
        d="M17.3633 30.0088L22.158 25.2422L30.3615 33.5391H20.916L17.3633 30.0088Z"
        fill={secondaryColor4}
      />
      <path
        d="M17.3633 30.0097L21.8307 28.5236L20.3254 27.0645L17.3633 30.0097Z"
        fill={secondaryColor}
      />
    </svg>
  );
};

//! Golang Icon
export const GoIcon: React.FC<IconProps> = ({ isHovered }) => {
  const defaultColors = {
    primaryColor: "white",
    secondaryColor: "white",
    tertiaryColor: "black",
    quaternaryColor: "white",
    accentColor: "black",
    lastColor: "#FFFFFF",
  };

  const hoveredColors = {
    primaryColor: "#f6d2a2", // Can be a different color for hover effect
    secondaryColor: "#69d7e2",
    tertiaryColor: "#fff",
    quaternaryColor: "#fff",
    accentColor: "#f6d2a2",
    lastColor: "#231f20",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={27}
      height={35}
      preserveAspectRatio="xMidYMid"
      viewBox="-10.858 -38.497 271.141 389.925"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill={colors.primaryColor}
        d="M3.686 188.165c.498 10.26 10.758 5.479 15.34 2.291 4.383-3.088 5.678-.498 6.076-6.475.299-3.984.697-7.869.498-11.853-6.674-.598-13.846.996-19.325 4.98-2.888 1.992-8.068 8.567-2.59 11.057m204.502 126.107c7.869 4.881 22.313 19.624 10.459 26.796-11.356 10.36-17.73-11.456-27.692-14.444 4.283-5.877 9.662-11.256 17.233-12.352zm-140.85 16.635c-9.264 1.395-14.444 9.762-22.213 14.046-7.272 4.283-10.061-1.395-10.659-2.59-1.095-.498-.996.498-2.789-1.295-6.773-10.659 6.973-18.428 14.145-23.708 9.961-1.992 16.237 6.674 21.516 13.547zM251.916 186.87c-.498 10.26-10.758 5.479-15.34 2.291-4.383-3.088-5.678-.498-6.076-6.475-.3-3.984-.698-7.869-.498-11.853 6.673-.598 13.845.996 19.324 4.98 2.79 1.992 8.069 8.567 2.59 11.057"
      ></path>
      <path
        fill={colors.secondaryColor}
        d="M224.722 61.759c35.561-12.551 7.77-61.26-23.21-39.745-20.32-17.432-48.31-20.62-77.696-20.62C95.03 3.687 67.636 8.966 48.511 25.7 17.63 5.777-10.858 53.59 25.4 65.644c-10.16 39.445 1.394 79.688-.2 119.831-1.494 36.06-10.957 84.37 9.065 116.744 17.034 27.692 53.69 37.554 83.873 38.65 38.549 1.394 85.266-8.069 103.993-45.423 17.93-35.561 12.95-79.888 10.659-118.238-2.291-38.749 1.992-78.095-8.069-115.45z"
      ></path>
      <path d="M254.605 180.794c-.996-2.092-2.888-4.483-4.681-5.778-4.582-3.287-10.46-5.08-16.536-5.279-.199-6.176-.398-12.95-.398-21.516v-7.77c-.1-24.504-.399-35.262-1.793-48.71-1.096-10.558-2.79-20.32-5.18-29.484 8.069-3.088 13.348-8.168 15.44-14.743 1.992-6.076.996-12.949-2.39-19.025-3.487-5.977-9.065-10.46-15.54-12.252-6.973-1.893-14.543-.498-21.815 4.382-6.475-5.478-13.945-9.662-22.313-12.85C164.557 2.292 147.325.2 123.916.2v.996l-.1-.996c-25.002 1.992-43.53 5.877-58.87 13.348-6.176 2.988-11.654 6.574-16.435 10.758-7.372-4.582-15.042-5.678-22.114-3.486-6.574 1.992-12.252 6.674-15.639 12.75S6.574 46.619 8.865 52.596c2.291 5.976 7.57 10.658 15.44 13.547-2.49 10.06-3.785 20.719-3.984 32.473-.2 11.455.298 20.62 2.091 41.338 1.295 15.44 1.793 22.512 1.993 31.079-6.774-.299-13.547 1.494-18.628 5.18-1.793 1.295-3.785 3.586-4.681 5.777-1.295 2.79-.797 5.28 1.793 6.774.398 4.781 3.088 6.972 7.172 6.574 2.988-.299 6.574-1.893 9.662-4.084a11.208 11.208 0 012.092-1.195c.299-.1.498-.2.797-.3 0 0 .597-.198.797-.298.298-.1.597-.2.796-.399-.199 4.682-.597 9.563-1.494 20.72-.996 12.55-1.494 19.424-1.693 27.094-.897 28.488 2.49 49.207 12.65 65.643 3.188 5.18 7.073 9.762 11.655 13.946-.897.597-4.682 3.387-5.877 4.283-4.184 3.188-7.072 5.877-8.766 8.865-2.191 3.885-2.191 7.77.299 11.854l.1.1.1.1c1.095 1.095 1.693 1.394 2.49 1.394h.297c.1.2.2.299.3.498.298.498.597.896.896 1.295 2.49 2.889 5.976 3.586 10.658.797 2.49-1.295 4.283-2.79 8.068-5.977l.2-.2c6.076-5.179 9.064-7.071 13.547-7.769l1.594-.299c.597.3 1.195.499 1.892.797 14.145 5.678 30.58 8.766 47.216 9.364 21.516.797 42.235-1.893 59.766-8.268 4.682-1.693 9.065-3.686 13.249-5.877 2.59.996 4.78 3.088 8.965 7.969.199.2.199.2.298.398.2.2.2.3.3.399.198.299.497.498.696.797 3.288 3.884 5.48 5.777 7.97 6.873 3.286 1.394 6.474.697 9.761-2.291 5.778-3.586 6.176-9.164 2.39-15.54-2.689-4.482-7.37-9.164-11.753-12.152 5.18-5.08 9.662-11.156 13.148-18.03 9.563-19.125 13.249-41.438 13.05-70.126-.1-10.16-.499-19.025-1.594-35.96v-.497c.498.199.996.498 1.494.896 3.088 2.092 6.674 3.785 9.662 4.084 4.084.399 6.774-1.793 7.172-6.574 2.49-1.594 2.988-4.084 1.693-6.873zM222.93 18.328c5.977 1.594 11.157 5.778 14.344 11.356 3.188 5.578 4.084 11.854 2.291 17.432-1.892 5.877-6.674 10.559-14.145 13.348a162.04 162.04 0 00-5.279-15.739c2.889-2.49 4.283-5.578 1.992-9.96-2.29-4.384-6.275-4.882-10.36-3.587-2.59-3.387-5.478-6.375-8.466-9.164 6.574-4.184 13.348-5.379 19.623-3.686zM10.56 51.997c-2.092-5.38-1.395-11.754 1.793-17.332 3.187-5.579 8.367-9.961 14.543-11.754 6.375-1.893 13.248-.997 20.022 2.988a65.541 65.541 0 00-10.36 11.854c-5.18-2.69-10.459-3.188-13.447 2.29-3.088 5.878.498 9.563 5.578 12.352-.697 1.694-1.395 3.487-1.992 5.28-.698 2.191-1.395 4.482-1.992 6.773-7.272-2.789-12.053-7.072-14.145-12.451zm12.053 135.77c-.1 0-.698.199-.698.298-.298.1-.597.2-.896.399-.797.299-1.594.797-2.39 1.394-2.79 1.993-6.177 3.487-8.767 3.686-2.988.299-4.681-.996-4.98-4.582 2.092-.697 2.988-1.195 3.785-2.39l-1.594-1.196c-.597.797-1.195 1.096-2.988 1.693-.1 0-.1 0-.2.1-1.593-.897-1.892-2.291-.995-4.283.797-1.793 2.59-3.885 4.084-4.98 4.781-3.487 11.156-5.18 17.531-4.782 0 2.49.1 4.98 0 7.37 0 .3 0 .499-.1.798-.099 1.394-.099 1.992-.199 2.69-.298 2.888-.498 3.286-1.593 3.785zm30.082 150.312l-.2.2c-3.685 3.187-5.478 4.482-7.769 5.777-3.785 2.291-6.375 1.793-8.168-.398-.299-.3-.498-.698-.697-.997-.1-.1-.2-.298-.299-.398v-.1c.2-1.793.897-3.088 2.69-5.877.1-.1.1-.1.1-.199 1.095-1.594 1.593-2.49 2.091-3.586l-1.793-.797c-.398.897-.896 1.694-1.893 3.287-.1.1-.1.1-.1.2-1.792 2.59-2.59 4.183-2.988 5.976h-.399c-.2-.1-.498-.299-.896-.697-3.885-6.176-.797-11.455 7.968-18.03 1.096-.796 4.782-3.386 5.778-4.183.2 0 .398-.1.598-.2 5.378 4.583 11.654 8.567 18.627 11.854 0 .1.1.2.199.3-4.084.995-7.272 3.087-12.85 7.868zm167.247-10.857c3.088 5.18 2.988 9.363-.897 12.252-.298-.598-.498-1.295-.896-2.291 0-.1 0-.1-.1-.2-1.394-3.785-2.29-5.378-3.984-7.171l-1.395 1.394c1.494 1.395 2.192 2.889 3.586 6.375 0 .1 0 .1.1.2.498 1.294.797 2.091 1.096 2.789-2.59 2.191-4.881 2.59-7.272 1.494-2.092-.897-4.084-2.79-7.272-6.375-.199-.2-.398-.498-.597-.797-.1-.1-.2-.2-.3-.399-.198-.199-.198-.199-.298-.398-3.686-4.283-5.877-6.574-8.268-7.87 5.579-3.187 10.56-6.773 15.042-10.957 4.183 3.088 8.865 7.67 11.455 11.954zm1.394-32.274c-8.566 17.233-23.707 29.385-44.028 36.756-17.332 6.276-37.852 8.866-59.069 8.069-36.557-1.295-68.233-14.045-83.075-38.151-9.961-16.038-13.249-36.458-12.352-64.548.299-7.67.697-14.543 1.693-27.094 1.096-14.145 1.395-18.229 1.694-24.604.199-4.582.199-9.264.1-14.244-.2-8.766-.698-15.739-1.993-31.378-1.793-20.719-2.291-29.784-2.092-41.14.3-14.94 2.291-28.09 6.475-40.54 6.771-20.223 19.224-33.87 37.154-42.734 15.041-7.37 33.27-11.156 58.073-13.149 23.21 0 40.143 2.092 54.786 7.471 17.531 6.475 30.58 17.83 39.545 35.263 5.778 14.144 9.165 29.385 10.958 46.916 1.394 13.348 1.693 24.106 1.793 48.51v7.77c.1 12.053.298 20.52.797 28.987.199 3.287.298 4.682.796 12.551 1.096 16.934 1.495 25.7 1.594 35.86.2 28.588-3.387 50.602-12.85 69.429zm30.481-109.074c-.1 0-.199-.1-.298-.1-1.793-.597-2.391-.996-2.989-1.693l-1.594 1.195c.897 1.196 1.793 1.694 3.786 2.39-.399 3.587-2.092 4.882-4.98 4.583-2.59-.2-5.978-1.793-8.767-3.686-.797-.597-1.593-.996-2.39-1.394-.1 0-.2-.1-.3-.1-.398-5.478-.398-6.873-.597-9.762l-.299-5.379c5.579.1 11.057 1.793 15.24 4.881 1.495 1.096 3.288 3.188 4.085 4.98.996 1.694.797 3.188-.897 4.085z"></path>
      <path
        fill={colors.tertiaryColor}
        d="M138.918 104.123c.1 5.08 1.096 10.658.199 16.037-1.395 2.59-3.984 2.89-6.275 3.885-3.188-.498-5.878-2.59-7.172-5.578-.797-6.076.199-11.854.498-17.93 0-.2 3.785.1 7.172 1.096 2.888.896 5.578 2.39 5.578 2.49zm-28.19.398c-2.79 10.56 3.686 27.792 14.344 13.647-.797-5.977.1-11.754.398-17.631.1-.498-14.642 3.287-14.742 3.984z"
      ></path>
      <path d="M140.113 108.805c-.2-2.989-.299-4.184-.299-5.678v-.697l-.697-.2-12.551-3.884v-.698l-1.295.3h-.1v.099l-14.144 3.586-.498.1-.2.497c-2.191 5.28-1.693 13.249 1.096 18.13 3.188 5.578 8.367 5.677 13.647-.698a10.192 10.192 0 007.47 5.38h.3l.298-.1c.399-.2.797-.3 1.495-.598.1 0 .1 0 .199-.1 2.888-.996 4.084-1.793 5.08-3.685l.1-.1v-.199c.298-1.793.398-3.686.398-5.777 0-1.495-.1-2.89-.299-5.678zm-15.938-3.686c-.1 1.793-.199 2.49-.298 3.486-.2 3.686-.2 6.475.1 9.264-4.683 5.977-8.368 5.977-10.858 1.494-2.391-4.183-2.89-11.256-1.096-15.937l12.55-3.188c-.099 1.295-.198 2.59-.398 4.881zm13.946 14.743c-.697 1.195-1.594 1.793-3.985 2.59-.1 0-.1 0-.199.099-.597.2-.996.398-1.295.498-2.69-.498-4.98-2.291-6.076-4.781-.299-2.69-.299-5.479-.1-9.164.1-.997.1-1.694.3-3.487.198-2.29.298-3.685.298-4.98l10.858 3.287c0 1.295.1 2.49.299 5.08.199 2.69.298 4.084.298 5.678 0 1.892-.1 3.586-.398 5.18z"></path>
      <g transform="translate(48.476 21.976)">
        <path
          fill={colors.quaternaryColor}
          d="M2.291 38.749c9.164 35.66 66.241 26.496 64.05-9.264C63.75-13.348-6.475-5.08 2.29 38.749"
        ></path>
        <path d="M67.337 29.385c-.598-10.36-5.18-18.428-12.75-23.508C47.813 1.295 38.848-.498 29.983.597 21.118 1.794 12.949 5.778 7.57 12.054 1.594 19.026-.697 28.19 1.395 38.749l.896-.2-.896.2c9.363 36.656 68.133 27.791 65.942-9.364zM3.187 38.55c-1.992-10.06.2-18.627 5.778-25.102 5.08-5.877 12.75-9.761 21.217-10.857s16.934.598 23.31 4.98c7.071 4.782 11.355 12.253 11.952 22.114 2.092 34.764-53.391 43.132-62.256 8.865z"></path>
        <ellipse cx="18.03" cy="32.872" rx="9.662" ry="10.459"></ellipse>
        <ellipse
          cx="22.412"
          cy="35.262"
          fill="#fff"
          rx="2.291"
          ry="2.689"
        ></ellipse>
      </g>
      <g transform="translate(129.618 18.098)">
        <path
          fill={colors.quaternaryColor}
          d="M1.195 35.96C8.268 76.9 75.206 66.042 65.544 24.803 56.878-12.252-1.196-1.992 1.195 35.96"
        ></path>
        <path d="M66.44 24.604C57.575-13.547-2.19-3.088.2 36.059v.1c3.286 19.324 20.52 29.186 39.545 25.998C48.41 60.663 56.18 56.48 61.26 50.304c5.578-6.874 7.57-15.739 5.18-25.7zm-6.673 24.504c-4.782 5.778-12.053 9.762-20.321 11.157-18.03 2.988-34.167-6.276-37.354-24.405C-.1-.996 56.28-10.858 64.647 25.002c2.192 9.463.399 17.731-4.88 24.106z"></path>
        <ellipse cx="17.631" cy="34.167" rx="9.463" ry="10.459"></ellipse>
        <ellipse
          cx="22.014"
          cy="36.557"
          fill="#fff"
          rx="2.191"
          ry="2.689"
        ></ellipse>
      </g>
      <path
        fill={colors.accentColor}
        d="M112.785 83.002c-7.87.697-14.245 9.961-10.16 17.332 5.378 9.762 17.431-.896 24.902.1 8.666.2 15.739 9.164 22.612 1.594 7.67-8.368-3.287-16.536-11.954-20.122z"
      ></path>
      <path
        fill={colors.lastColor}
        d="M151.135 89.676c-2.69-3.387-7.371-6.475-12.452-8.567l-.199-.1h-.199l-25.5.997c-8.866.797-15.24 11.057-10.958 18.826 1.694 2.989 3.985 4.483 7.073 4.682 2.29.1 4.682-.398 8.367-1.693.299-.1.697-.2 1.195-.399 4.981-1.693 6.973-2.191 8.965-1.892h.1c2.39 0 4.383.697 8.168 2.191 4.184 1.693 5.479 2.192 7.57 2.39 2.89.2 5.38-.796 7.67-3.286 3.885-4.284 3.686-8.866.2-13.149zm-1.694 11.754c-1.892 2.092-3.785 2.79-6.076 2.69-1.793-.1-2.988-.598-6.973-2.192-3.984-1.693-6.175-2.29-8.765-2.39-2.49-.3-4.582.199-9.862 1.992-.498.199-.896.299-1.195.398-7.272 2.49-10.758 2.291-13.149-2.092-3.586-6.474 1.893-15.24 9.364-15.937l25.201-.997c4.782 1.993 9.065 4.881 11.555 7.97 2.988 3.585 3.088 7.171-.1 10.558z"
      ></path>
      <path d="M140.178 78.719c-3.088-11.356-28.987-9.662-28.39 3.885 1.295 10.06 31.378 7.37 28.39-3.885z"></path>
    </svg>
  );
};

//!Swift Icon
export const SwiftIcon: React.FC<IconProps> = ({ isHovered }) => {
  const primaryColor = isHovered ? "#F05138" : "white";
  const secondaryColor = isHovered ? "white" : "black";

  return (
    <svg
      width={31}
      height={31}
      viewBox="0 0 31 31"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_875_748)">
        <path
          d="M30.4041 8.934V8.01865C30.3754 7.36073 30.3468 6.67421 30.2324 6.0163C30.118 5.35838 29.9178 4.72907 29.6031 4.12836C29.2885 3.52766 28.9166 2.98416 28.4303 2.52648C27.944 2.04019 27.4005 1.66833 26.8284 1.35367C26.2277 1.03902 25.5984 0.838786 24.9405 0.724366C24.2826 0.609946 23.6247 0.552734 22.9381 0.552734H7.57724C7.40561 0.552734 7.23398 0.552736 7.09096 0.581341C6.60467 0.609946 6.08978 0.638551 5.60349 0.724366C5.11721 0.810181 4.63092 0.953205 4.17324 1.12483C4.03022 1.18205 3.85859 1.26786 3.71556 1.32507C3.25788 1.55391 2.85741 1.83996 2.45694 2.15462C2.34252 2.26904 2.1995 2.38345 2.08508 2.49787C1.59879 2.98416 1.22693 3.52766 0.91227 4.09976C0.597614 4.70046 0.39738 5.32977 0.28296 5.98769C0.16854 6.64561 0.139933 7.30352 0.111328 7.99004V23.3509C0.139933 24.0089 0.16854 24.6954 0.28296 25.3533C0.39738 26.0112 0.597614 26.6405 0.91227 27.2412C1.22693 27.8419 1.59879 28.3854 2.08508 28.8431C2.57136 29.3294 3.11486 29.7013 3.68696 30.0159C4.28766 30.3306 4.91697 30.5308 5.57489 30.6452C6.23281 30.7596 6.89072 30.8169 7.57724 30.8169H22.9381C23.5961 30.7882 24.2826 30.7596 24.9405 30.6452C25.5984 30.5308 26.2277 30.3306 26.8284 30.0159C27.4291 29.7013 27.9726 29.3294 28.4303 28.8431C28.9166 28.3568 29.2885 27.8133 29.6031 27.2412C29.9178 26.6405 30.118 26.0112 30.2324 25.3533C30.3468 24.6954 30.4041 24.0375 30.4041 23.3509V22.4356V9.99239V8.934Z"
          fill={primaryColor}
        />
        <path
          d="M24.0833 19.2607L24.1691 18.9174C25.4277 13.9115 22.367 7.9617 17.1609 4.84375C19.4493 7.93309 20.4505 11.6803 19.5637 14.9413C19.4779 15.2274 19.3921 15.5134 19.2776 15.7995C19.1632 15.7137 19.0202 15.6278 18.82 15.542C18.82 15.542 13.6425 12.3383 8.03587 6.70308C7.89284 6.56005 11.0394 11.1941 14.5864 14.9413C12.8987 13.9974 8.2361 10.5934 5.26118 7.90449C5.63305 8.5052 6.06212 9.1059 6.5198 9.64939C8.97984 12.7959 12.2122 16.6576 16.0739 19.6326C13.3564 21.2916 9.52333 21.4347 5.71886 19.6326C4.7749 19.2035 3.88814 18.66 3.05859 18.0593C4.66048 20.6337 7.14911 22.8649 10.1812 24.1808C13.7855 25.7254 17.3897 25.6396 20.05 24.2094C20.05 24.2094 20.0786 24.2094 20.0786 24.1808C20.193 24.1235 20.3074 24.0377 20.4218 23.9805C21.7091 23.3226 24.2263 22.6647 25.5994 25.2963C25.9998 25.8971 26.715 22.4644 24.0833 19.2607Z"
          fill={secondaryColor}
        />
      </g>
      <defs>
        <clipPath id="clip0_875_748">
          <rect width={31} height={31} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

//! Dart Icon
export const DartIcon: React.FC<IconProps> = ({ isHovered }) => {
  const defaultColors = {
    primaryColor: "white",
    secondaryColor: "#757575",
    tertiaryColor: "#C8CACB",
    quaternaryColor: "#CFCFCF",
    accentColor: "#757575",
    altColor: "white",
  };

  const hoveredColors = {
    primaryColor: "#00D2B8", // Can be a different color for hover effect
    secondaryColor: "#55DDCA",
    tertiaryColor: "#0081C6",
    quaternaryColor: "#0079B3",
    accentColor: "#00A4E4",
    altColor: "#00D2B8",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={28}
      height={29}
      preserveAspectRatio="xMidYMid"
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill={colors.primaryColor}
        d="M70.534 69.696L53.988 53.15l.07 119.6.198 5.59c.082 2.63.57 5.598 1.384 8.674l131.104 46.23 32.772-14.52.012-.04L70.534 69.696"
      ></path>
      <path
        fill={colors.secondaryColor}
        d="M55.64 187.014l.008.008c-.008-.054-.036-.114-.036-.17 0 .056.008.108.028.162zm163.876 31.71l-32.772 14.52-131.096-46.222c2.504 9.608 8.048 20.408 14.014 26.314l42.784 42.54 95.13.124 11.952-37.316-.012.04z"
      ></path>
      <path
        fill={colors.tertiaryColor}
        d="M3.034 130.116c-4.236 4.522-2.132 13.85 4.688 20.722L37.14 180.5l18.5 6.514c-.814-3.076-1.302-6.044-1.384-8.674l-.198-5.59-.07-119.6-50.954 76.966z"
      ></path>
      <path
        fill={colors.quaternaryColor}
        d="M187.82 54.686c-3.076-.786-6.026-1.272-8.7-1.356l-5.908-.204-119.224.016 165.556 165.542h.014l14.54-32.804L187.82 54.686"
      ></path>
      <path
        fill={colors.accentColor}
        d="M187.67 54.654c.064.014.114.032.156.038l-.006-.006c-.036-.018-.086-.018-.15-.032zm26.448 14.078c-6.008-6.058-16.666-11.564-26.292-14.04l46.272 131.188-14.54 32.804h-.014l35.532-11.348.076-97.416-41.034-41.188z"
      ></path>
      <path
        fill={colors.altColor}
        d="M181.338 36.298L151.684 6.862c-6.858-6.794-16.19-8.908-20.7-4.684L53.988 53.142l119.224-.016 5.908.204c2.674.084 5.624.57 8.7 1.356l-6.482-18.388z"
      ></path>
    </svg>
  );
};

//! Postgres Icon
export const PostgresIcon: React.FC<IconProps> = ({ isHovered }) => {
  const defaultColors = {
    primaryColor: "#000",
    secondaryColor: "#336791",
    tertiaryColor: "#fff",
    quaternaryColor: "#fff",
  };

  const hoveredColors = {
    primaryColor: "#fff", // Can be a different color for hover effect
    secondaryColor: "#fff",
    tertiaryColor: "#000",
    quaternaryColor: "#000",
  };

  const colors = isHovered ? defaultColors : hoveredColors;

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={36}
      height={34}
      fill="none"
      viewBox="0 0 133 134"
    >
      <g clipPath="url(#clip0_835_1109)">
        <path
          fill={colors.primaryColor}
          d="M130.064 79.965c-.771-2.333-2.789-3.959-5.399-4.349-1.231-.183-2.64-.105-4.308.239-2.907.6-5.064.828-6.638.872 5.941-10.031 10.772-21.47 13.554-32.238 4.497-17.412 2.094-25.344-.715-28.932C119.126 6.06 108.283.96 95.201.803c-6.978-.086-13.104 1.292-16.3 2.283-2.976-.525-6.175-.818-9.532-.872-6.293-.1-11.853 1.271-16.604 4.09-2.63-.89-6.851-2.143-11.726-2.943-11.465-1.882-20.706-.416-27.465 4.36C5.39 13.5 1.595 23.545 2.297 37.575c.223 4.454 2.715 18.006 6.638 30.859 2.254 7.387 4.659 13.522 7.146 18.235 3.527 6.683 7.3 10.62 11.538 12.033 2.375.79 6.69 1.345 11.227-2.435.575.697 1.343 1.39 2.361 2.032 1.294.816 2.875 1.482 4.455 1.877 5.693 1.423 11.025 1.067 15.574-.927.028.809.05 1.582.067 2.249.03 1.083.06 2.145.1 3.138.27 6.712.727 11.932 2.08 15.584.074.201.174.507.28.832.675 2.067 1.803 5.527 4.675 8.237 2.974 2.808 6.572 3.668 9.867 3.668 1.652 0 3.228-.216 4.611-.513 4.93-1.056 10.528-2.665 14.577-8.432 3.829-5.451 5.69-13.661 6.027-26.597.044-.366.084-.716.122-1.048l.081-.684.902.08.232.015c5.02.229 11.159-.836 14.929-2.587 2.979-1.382 12.526-6.422 10.278-13.227z"
        ></path>
        <path
          fill={colors.secondaryColor}
          d="M121.481 81.289c-14.927 3.08-15.954-1.975-15.954-1.975 15.761-23.387 22.35-53.073 16.665-60.338C106.68-.844 79.829 8.53 79.38 8.773l-.144.026c-2.95-.613-6.25-.977-9.96-1.038-6.753-.11-11.877 1.771-15.765 4.72 0 0-47.9-19.734-45.672 24.817.474 9.478 13.585 71.714 29.222 52.916 5.715-6.874 11.238-12.686 11.238-12.686 2.743 1.822 6.027 2.751 9.469 2.417l.267-.226c-.083.853-.045 1.688.107 2.676-4.028 4.5-2.844 5.29-10.897 6.949-8.15 1.68-3.362 4.669-.237 5.45 3.79.948 12.555 2.29 18.478-6.001l-.236.946c1.578 1.264 2.687 8.223 2.5 14.532-.185 6.308-.309 10.64.934 14.023 1.245 3.383 2.484 10.995 13.071 8.726 8.846-1.896 13.43-6.808 14.068-15.003.452-5.825 1.477-4.964 1.54-10.172l.822-2.466c.948-7.897.151-10.445 5.601-9.26l1.325.117c4.01.182 9.26-.646 12.342-2.078 6.634-3.079 10.57-8.22 4.027-6.87h.001z"
        ></path>
        <path
          fill={colors.tertiaryColor}
          d="M56.313 41.538c-1.345-.187-2.563-.014-3.18.453-.346.263-.453.567-.482.776-.078.555.31 1.168.55 1.484.675.896 1.662 1.511 2.639 1.647.141.02.282.029.423.029 1.628 0 3.11-1.269 3.24-2.205.163-1.172-1.539-1.954-3.19-2.184zm44.564.038c-.128-.92-1.763-1.182-3.316-.966-1.55.216-3.052.916-2.927 1.837.1.716 1.394 1.939 2.925 1.939.13 0 .26-.009.392-.027 1.022-.142 1.771-.79 2.128-1.165.542-.57.856-1.205.798-1.619z"
        ></path>
        <path
          fill={colors.quaternaryColor}
          d="M126.449 80.94c-.569-1.722-2.401-2.275-5.445-1.647-9.038 1.865-12.274.573-13.337-.21 7.025-10.7 12.804-23.637 15.921-35.706 1.477-5.717 2.293-11.026 2.359-15.354.074-4.75-.735-8.24-2.403-10.373-6.727-8.595-16.6-13.206-28.552-13.333-8.216-.092-15.158 2.01-16.503 2.602a41.144 41.144 0 00-9.287-1.193c-6.168-.1-11.5 1.377-15.914 4.387-1.917-.713-6.872-2.415-12.932-3.39-10.477-1.687-18.802-.41-24.743 3.8-7.089 5.022-10.361 14-9.727 26.682.213 4.267 2.645 17.394 6.481 29.965 5.05 16.546 10.541 25.913 16.317 27.84a7.31 7.31 0 002.316.383c2.107 0 4.69-.95 7.378-4.182 3.279-3.933 6.67-7.77 10.17-11.507a16.386 16.386 0 007.317 1.968l.017.2c-.439.523-.869 1.054-1.29 1.593-1.767 2.244-2.135 2.712-7.826 3.883-1.619.334-5.918 1.22-5.98 4.234-.07 3.293 5.081 4.675 5.668 4.822 2.045.512 4.015.764 5.894.764 4.569 0 8.59-1.501 11.803-4.407-.099 11.738.39 23.305 1.8 26.829 1.155 2.885 3.975 9.936 12.882 9.935 1.307 0 2.746-.152 4.328-.491 9.297-1.993 13.334-6.102 14.895-15.16.836-4.841 2.27-16.401 2.945-22.602 1.423.444 3.256.647 5.237.647 4.132 0 8.9-.878 11.89-2.266 3.359-1.56 9.42-5.388 8.321-8.714zM104.31 39.037c-.03 1.83-.282 3.492-.549 5.227-.288 1.865-.585 3.794-.66 6.136-.074 2.279.211 4.648.486 6.94.556 4.627 1.127 9.391-1.082 14.092a18.32 18.32 0 01-.979-2.012c-.274-.665-.871-1.734-1.697-3.214-3.211-5.76-10.733-19.25-6.882-24.754 1.146-1.638 4.057-3.323 11.363-2.416zM95.454 8.024c10.708.237 19.179 4.243 25.176 11.906 4.6 5.878-.465 32.625-15.128 55.7-.148-.188-.296-.375-.445-.56l-.185-.233c3.789-6.258 3.048-12.449 2.388-17.938-.271-2.253-.527-4.38-.462-6.38.068-2.117.348-3.934.619-5.691.333-2.165.671-4.405.578-7.046.07-.277.098-.604.061-.993-.238-2.532-3.129-10.11-9.022-16.97-3.224-3.752-7.924-7.95-14.342-10.783 2.76-.572 6.535-1.106 10.762-1.012zm-59.92 80.822c-2.962 3.561-5.007 2.878-5.68 2.654-4.381-1.461-9.466-10.723-13.948-25.41-3.88-12.708-6.146-25.487-6.326-29.07-.566-11.333 2.181-19.23 8.166-23.475 9.74-6.907 25.752-2.773 32.186-.676-.092.091-.188.177-.28.27C39.093 23.802 39.344 42.02 39.37 43.133c0 .43.035 1.038.084 1.874.182 3.065.52 8.768-.383 15.226-.84 6.002 1.01 11.876 5.075 16.117.417.434.855.848 1.314 1.239a271.498 271.498 0 00-9.926 11.256zm11.283-15.054c-3.276-3.418-4.764-8.173-4.082-13.046.953-6.822.601-12.764.412-15.956-.026-.447-.05-.839-.064-1.147 1.543-1.368 8.691-5.198 13.789-4.03 2.326.533 3.743 2.117 4.332 4.841 3.05 14.106.404 19.985-1.722 24.71-.438.974-.852 1.894-1.206 2.845l-.274.736c-.694 1.86-1.34 3.59-1.74 5.232-3.482-.01-6.87-1.498-9.445-4.186zm.534 19.023c-1.017-.254-1.931-.695-2.468-1.061.449-.21 1.246-.498 2.63-.783 6.694-1.378 7.728-2.35 9.986-5.217a44.145 44.145 0 011.916-2.31l.002-.001c1.21-1.355 1.763-1.125 2.767-.709.814.337 1.606 1.356 1.928 2.479.152.53.322 1.536-.236 2.319-4.716 6.603-11.589 6.518-16.525 5.283zm35.035 32.602c-8.19 1.755-11.09-2.424-13-7.201-1.233-3.084-1.84-16.99-1.41-32.348a1.846 1.846 0 00-.08-.587 7.755 7.755 0 00-.228-1.086c-.64-2.234-2.198-4.103-4.068-4.878-.743-.308-2.106-.873-3.744-.454.349-1.44.955-3.065 1.612-4.825l.275-.74c.31-.835.7-1.7 1.112-2.616 2.225-4.943 5.272-11.714 1.965-27.01-1.239-5.728-5.376-8.526-11.647-7.876-3.76.389-7.2 1.906-8.915 2.776-.369.186-.706.367-1.022.543.48-5.773 2.288-16.56 9.056-23.386 4.26-4.296 9.935-6.418 16.849-6.304 13.622.223 22.358 7.214 27.288 13.04 4.248 5.02 6.549 10.077 7.467 12.804-6.904-.702-11.6.661-13.98 4.064-5.179 7.403 2.833 21.77 6.683 28.675.706 1.266 1.316 2.36 1.507 2.824 1.254 3.039 2.877 5.068 4.063 6.549.363.453.715.894.983 1.278-2.091.603-5.847 1.996-5.504 8.958-.276 3.493-2.24 19.85-3.237 25.628-1.317 7.635-4.126 10.478-12.025 12.172zm34.184-39.12c-2.138.993-5.716 1.738-9.116 1.898-3.754.175-5.665-.42-6.115-.788-.211-4.338 1.404-4.792 3.113-5.272.268-.075.53-.149.783-.237.158.128.33.255.518.38 3.018 1.991 8.4 2.206 15.999.637l.084-.016c-1.025.958-2.779 2.244-5.266 3.399z"
        ></path>
      </g>
      <defs>
        <clipPath id="clip0_835_1109">
          <path
            fill="#fff"
            d="M0 0H132.512V132.512H0z"
            transform="translate(.059 .617)"
          ></path>
        </clipPath>
      </defs>
    </svg>
  );
};

//! TypeScript Icon
export const TypescriptIcon: React.FC<IconProps> = ({ isHovered }) => {
  const hoveredColors = {
    primaryColor: "#fff",
    secondaryColor: "#3178c6",
  };

  const defaultColors = {
    primaryColor: "#000", // Can be a different color for hover effect
    secondaryColor: "#fff",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={34}
      height={34}
      viewBox="0 0 34 34"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        width="28"
        height="28"
        x="2"
        y="2"
        fill={colors.secondaryColor}
        rx="1.312"
      ></rect>
      <path
        fill={colors.primaryColor}
        fillRule="evenodd"
        d="M18.245 23.759v3.068a6.492 6.492 0 001.764.575 11.56 11.56 0 002.146.192 9.968 9.968 0 002.088-.211 5.11 5.11 0 001.735-.7 3.542 3.542 0 001.181-1.266 4.469 4.469 0 00.186-3.394 3.409 3.409 0 00-.717-1.117 5.236 5.236 0 00-1.123-.877 12.027 12.027 0 00-1.477-.734q-.6-.249-1.08-.484a5.5 5.5 0 01-.813-.479 2.089 2.089 0 01-.516-.518 1.091 1.091 0 01-.181-.618 1.039 1.039 0 01.162-.571 1.4 1.4 0 01.459-.436 2.439 2.439 0 01.726-.283 4.211 4.211 0 01.956-.1 5.942 5.942 0 01.808.058 6.292 6.292 0 01.856.177 5.994 5.994 0 01.836.3 4.657 4.657 0 01.751.422V13.9a7.509 7.509 0 00-1.525-.4 12.426 12.426 0 00-1.9-.129 8.767 8.767 0 00-2.064.235 5.239 5.239 0 00-1.716.733 3.655 3.655 0 00-1.171 1.271 3.731 3.731 0 00-.431 1.845 3.588 3.588 0 00.789 2.34 6 6 0 002.395 1.639q.63.26 1.175.509a6.458 6.458 0 01.942.517 2.463 2.463 0 01.626.585 1.2 1.2 0 01.23.719 1.1 1.1 0 01-.144.552 1.269 1.269 0 01-.435.441 2.381 2.381 0 01-.726.292 4.377 4.377 0 01-1.018.105 5.773 5.773 0 01-1.969-.35 5.874 5.874 0 01-1.805-1.045zm-5.154-7.638h4v-2.527H5.938v2.527H9.92v11.254h3.171z"
      ></path>
    </svg>
  );
};

// ! Git Icon
export const GitIcon: React.FC<IconProps> = ({ isHovered }) => {
  const hoveredColors = {
    primaryColor: "#EE513B",
    secondaryColor: "#fff",
  };

  const defaultColors = {
    primaryColor: "#fff", // Can be a different color for hover effect
    secondaryColor: "#000",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={36}
      height={36}
      viewBox="0 0 36 36"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill={colors.primaryColor}
        d="M2.585 17.413a1.999 1.999 0 010-2.826L14.587 2.585c.78-.78 2.046-.78 2.826 0l12.002 12.002c.78.78.78 2.046 0 2.826L17.413 29.415c-.78.78-2.046.78-2.826 0L2.585 17.413z"
      ></path>
      <path
        fill={colors.secondaryColor}
        d="M12.149 5.062l-1.215 1.215 3.139 3.139A2.126 2.126 0 0015.25 12.3v7.679a2.126 2.126 0 101.718.097v-7.765l3 3a2.125 2.125 0 101.283-1.147l-3.221-3.223a2.125 2.125 0 00-2.66-2.66l-3.221-3.22z"
      ></path>
    </svg>
  );
};

// ! Docker Icon
export const DockerIcon: React.FC<IconProps> = ({ isHovered }) => {
  const hoveredColors = {
    primaryColor: "#fff",
    circleColor: "#1794D4",
  };

  const defaultColors = {
    primaryColor: "#000", // Can be a different color for hover effect
    circleColor: "#fff",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={36}
      height={36}
      viewBox="0 0 36 36"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="16" cy="16" r="14" fill={colors.circleColor}></circle>
      <path
        fill={colors.primaryColor}
        d="M18 7h-2v2h2V7zM10 10h2v2h-2v-2zM6.002 16.941C6.172 19.843 7.9 24 14 24c6.8 0 9.833-5 10.5-7.5.833 0 2.7-.5 3.5-2.5-.5-.5-2.5-.5-3.5 0 0-.8-.5-2.5-1.5-3-.667.667-1.7 2.4-.5 4-.5 1-1.833 1-2.5 1H6.943c-.53 0-.973.413-.941.941zM9 13H7v2h2v-2z"
      ></path>
      <path
        fill={colors.primaryColor}
        d="M10 13h2v2h-2v-2zM15 13h-2v2h2v-2zM16 13h2v2h-2v-2zM21 13h-2v2h2v-2zM15 10h-2v2h2v-2zM16 10h2v2h-2v-2z"
      ></path>
    </svg>
  );
};

export const MongoIcon: React.FC<IconProps> = ({ isHovered }) => {
  const hoveredColors = {
    primaryColor: "#41A247",
  };

  const defaultColors = {
    primaryColor: "#fff", // Can be a different color for hover effect
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={36}
      height={36}
      fill="none"
      viewBox="0 0 36 36"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18.0038 25.7142C18.0038 25.7142 18.0038 14.2232 18.3853 14.2243C18.6803 14.2243 19.064 29.0469 19.064 29.0469C18.5361 28.9848 18.0038 26.6081 18.0038 25.7142ZM25.399 14.3574C24.3798 9.90343 22.1472 6.07385 19.0685 3.1182L19.0607 3.11154C18.6859 2.53927 18.3432 1.8827 18.0681 1.19065L18.0415 1.11523C18.0426 1.13742 18.0426 1.16403 18.0426 1.19065C18.0426 1.81727 17.762 2.37735 17.3195 2.75332L17.3162 2.75554C13.3524 6.12043 10.8304 11.079 10.7472 16.6277V16.6421C10.7461 16.7108 10.7461 16.7918 10.7461 16.8728C10.7461 22.3704 13.3912 27.2503 17.4781 30.309L17.5213 30.3401L17.6178 30.41C17.796 31.729 17.9483 33.051 18.0748 34.376H18.7413C18.9254 32.7224 19.1738 31.275 19.4988 29.8554L19.4478 30.1205C19.887 29.8155 20.2707 29.4994 20.6289 29.1567L20.6256 29.1601C23.7321 26.2798 25.6707 22.1763 25.6707 17.6214C25.6707 17.5537 25.6707 17.4872 25.6696 17.4195V17.4295C25.6663 16.3415 25.5676 15.2779 25.3801 14.2454L25.3968 14.3552L25.399 14.3574Z"
        fill={colors.primaryColor}
      />
    </svg>
  );
};
export const KotlinIcon: React.FC<IconProps> = ({ isHovered }) => {
  const defaultColors = {
    primaryColor: "#fff",
    secondaryColor: "#E2E1E2",
    tertiaryColor: "#fff",
  };

  const hoveredColors = {
    primaryColor: "url(#a)", // Can be a different color for hover effect
    secondaryColor: "url(#b)",
    tertiaryColor: "#000",
  };

  const colors = isHovered ? hoveredColors : defaultColors;
  return (
    <svg
      width={27}
      height={27}
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <defs>
        <linearGradient
          id="a"
          x1="73.714"
          x2="105.452"
          y1="910.226"
          y2="878.134"
          gradientTransform="matrix(.893 0 0 .893 -64.139 -782.556)"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0" stopColor="#0296d8"></stop>
          <stop offset="1" stopColor="#8371d9"></stop>
        </linearGradient>
        <linearGradient
          id="b"
          x1="69.813"
          x2="102.279"
          y1="905.226"
          y2="875.745"
          gradientTransform="matrix(.893 0 0 .893 -64.139 -782.556)"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0" stopColor="#cb55c0"></stop>
          <stop offset="1" stopColor="#f28e0e"></stop>
        </linearGradient>
      </defs>
      <path
        fill={colors.primaryColor}
        d="M2 2v28h28v-.047l-6.95-7-6.95-7.007 6.95-7.012L29.938 2z"
      ></path>
      <path
        fill={colors.secondaryColor}
        d="M16.318 2L2 16.318V30h.124l14.008-14.008-.031-.031L23.05 8.95 29.938 2z"
      ></path>
    </svg>
  );
};
export const RustIcon: React.FC<IconProps> = ({ isHovered }) => {

  const defaultColors = {
    primaryColor: "#fff",
  };

  const hoveredColors = {
    primaryColor: "url(#a)", // Can be a different color for hover effect
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={30}
      height={30}
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
       <defs>
        <radialGradient
          id="a"
          cx="-492.035"
          cy="-883.37"
          r="13.998"
          gradientTransform="matrix(.866 -.5 -.3 -.52 177.106 -689.033)"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0" stopColor="#7d7d7d"></stop>
          <stop offset="0.267" stopColor="#7e7c7a"></stop>
          <stop offset="0.45" stopColor="#817871"></stop>
          <stop offset="0.608" stopColor="#867162"></stop>
          <stop offset="0.753" stopColor="#8d684c"></stop>
          <stop offset="0.886" stopColor="#965c30"></stop>
          <stop offset="1" stopColor="#a04f12"></stop>
        </radialGradient>
      </defs>
      <path
        fill={colors.primaryColor}
        d="M15.124 5.3a.832.832 0 11.832.832.831.831 0 01-.832-.832M5.2 12.834a.832.832 0 11.832.832.832.832 0 01-.832-.832m19.856.039a.832.832 0 11.832.832.831.831 0 01-.832-.832m-17.451 1.14a.76.76 0 00.386-1l-.369-.835h1.452v6.545h-2.93a10.247 10.247 0 01-.332-3.911zm6.074.161v-1.929h3.458c.179 0 1.261.206 1.261 1.016 0 .672-.83.913-1.513.913zM8.958 24.561a.832.832 0 11.832.832.831.831 0 01-.832-.832m12.331.039a.832.832 0 11.832.832.832.832 0 01-.832-.832m.257-1.887a.758.758 0 00-.9.584l-.418 1.949a10.249 10.249 0 01-8.545-.041l-.417-1.949a.759.759 0 00-.9-.583l-1.721.37a10.233 10.233 0 01-.89-1.049h8.374c.095 0 .158-.017.158-.1v-2.966c0-.086-.063-.1-.158-.1h-2.45v-1.881h2.649a1.665 1.665 0 011.629 1.412c.105.413.336 1.757.494 2.187.157.483.8 1.447 1.482 1.447h4.323a10.243 10.243 0 01-.949 1.1zm4.65-7.821a10.261 10.261 0 01.022 1.779h-1.051c-.105 0-.148.069-.148.172v.483c0 1.136-.641 1.384-1.2 1.447-.535.06-1.128-.224-1.2-.551a3.616 3.616 0 00-1.671-2.808c1.03-.654 2.1-1.619 2.1-2.911A3.292 3.292 0 0021.44 9.8a4.559 4.559 0 00-2.2-.724H8.367A10.246 10.246 0 0114.1 5.84l1.282 1.344a.758.758 0 001.072.026l1.434-1.372a10.248 10.248 0 017.015 5l-.982 2.217a.761.761 0 00.386 1zm2.448.036l-.033-.343 1.011-.943a.42.42 0 00-.013-.595.428.428 0 00-.121-.081l-1.288-.483-.1-.334.806-1.12a.422.422 0 00-.13-.581.43.43 0 00-.133-.055l-1.363-.222-.164-.306.573-1.257a.419.419 0 00-.236-.544.426.426 0 00-.146-.029l-1.383.048-.224-.264.318-1.347a.421.421 0 00-.343-.487.435.435 0 00-.144 0l-1.348.315-.266-.219.049-1.381a.421.421 0 00-.431-.411.426.426 0 00-.141.028l-1.257.573-.306-.164-.222-1.363a.421.421 0 00-.5-.318.43.43 0 00-.133.055l-1.121.806-.333-.1-.483-1.293a.421.421 0 00-.555-.215.442.442 0 00-.12.08l-.946 1.012-.343-.033-.728-1.177a.421.421 0 00-.688 0l-.728 1.177-.343.033-.943-1.012a.421.421 0 00-.595.015.442.442 0 00-.08.12L12.483 3.8l-.333.1-1.12-.8a.422.422 0 00-.581.13.43.43 0 00-.055.133l-.222 1.363-.306.164-1.258-.573a.421.421 0 00-.544.239.444.444 0 00-.028.144l.048 1.383-.266.217-1.347-.316a.421.421 0 00-.487.343.435.435 0 000 .144L6.3 7.819l-.218.265L4.7 8.036a.422.422 0 00-.383.573l.573 1.257-.164.306-1.363.222a.42.42 0 00-.318.5.43.43 0 00.055.133l.806 1.12-.1.334-1.293.483a.421.421 0 00-.215.555.414.414 0 00.081.121l1.011.943-.033.343-1.177.728a.421.421 0 000 .688l1.177.728.033.343-1.011.943a.421.421 0 00.015.595.436.436 0 00.119.08l1.293.483.1.334-.806 1.124a.421.421 0 00.131.581.43.43 0 00.133.055l1.363.222.164.307-.573 1.257a.422.422 0 00.24.545.438.438 0 00.143.028l1.383-.048.219.266-.317 1.348a.42.42 0 00.341.486.4.4 0 00.146 0l1.345-.319.266.218-.049 1.382a.419.419 0 00.429.41.413.413 0 00.143-.028l1.257-.573.306.164.222 1.362a.421.421 0 00.5.319.407.407 0 00.133-.055l1.12-.807.334.1.483 1.292a.422.422 0 00.556.214.436.436 0 00.119-.08l.943-1.011.343.034.728 1.177a.422.422 0 00.588.1.413.413 0 00.1-.1l.728-1.177.343-.034.943 1.011a.421.421 0 00.595-.015.436.436 0 00.08-.119l.483-1.292.334-.1 1.12.807a.421.421 0 00.581-.131.43.43 0 00.055-.133l.222-1.362.306-.164 1.257.573a.421.421 0 00.544-.239.438.438 0 00.028-.143l-.048-1.384.265-.218 1.347.317a.421.421 0 00.487-.34.447.447 0 000-.146l-.309-1.346.218-.266 1.383.048a.421.421 0 00.41-.431.4.4 0 00-.028-.142l-.573-1.257.164-.307 1.363-.222a.421.421 0 00.319-.5.434.434 0 00-.056-.135l-.806-1.12.1-.334 1.293-.483a.42.42 0 00.215-.554.414.414 0 00-.081-.121l-1.011-.943.033-.343 1.177-.728a.421.421 0 000-.688z"
      ></path>
    </svg>
  );
};
export const NextJsIcon = () => {
  return (
    <svg
      width={29}
      height={29}
      viewBox="0 0 29 29"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_790_1062)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0 14.3756C0 6.43618 6.43618 0 14.3756 0C22.315 0 28.7513 6.43618 28.7513 14.3756C28.7513 19.3343 26.2407 23.7066 22.4212 26.2907L9.40524 8.06841C9.16308 7.72939 8.72965 7.58565 8.3329 7.71279C7.93615 7.83993 7.667 8.20883 7.667 8.62545V23.001H9.58375V11.616L20.7582 27.2602C18.8352 28.2148 16.6681 28.7513 14.3756 28.7513C6.43618 28.7513 0 22.315 0 14.3756ZM19.1675 19.1675V7.667H21.0843V19.1675H19.1675Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_790_1062">
          <rect width="28.7513" height="28.7513" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const KubernetesIcon: React.FC<IconProps> = ({ isHovered }) => {
  const defaultColors = {
    primaryColor: "#fff",
    secondaryColor: "#E2E1E2",
    tertiaryColor: "#fff",
  };

  const hoveredColors = {
    primaryColor: "url(#a)", // Can be a different color for hover effect
    secondaryColor: "url(#b)",
    tertiaryColor: "#000",
  };

  const colors = isHovered ? hoveredColors : defaultColors;

  return (
    <svg
      width={30}
      height={30}
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_790_1064)">
        <path
          d="M14.725 0.840362C14.4701 0.8532 14.2204 0.916387 13.9905 1.02622L3.96792 5.81512C3.70852 5.93901 3.4806 6.11928 3.30108 6.34252C3.12156 6.56577 2.99506 6.82626 2.93098 7.10465L0.458306 17.8617C0.40121 18.1096 0.394822 18.3663 0.439519 18.6166C0.484216 18.8669 0.57909 19.1058 0.718527 19.3192C0.752332 19.3713 0.788691 19.4218 0.827472 19.4704L7.76471 28.0958C7.94427 28.319 8.17223 28.4992 8.43164 28.623C8.69105 28.7468 8.97526 28.8111 9.26315 28.8111L20.3881 28.8085C20.6759 28.8087 20.9601 28.7447 21.2195 28.6211C21.4789 28.4975 21.7069 28.3175 21.8866 28.0946L28.8213 19.4678C29.0009 19.2445 29.1275 18.984 29.1917 18.7054C29.2558 18.4269 29.2558 18.1377 29.1917 17.8591L26.7153 7.10207C26.6512 6.82368 26.5247 6.5632 26.3451 6.33996C26.1656 6.11672 25.9377 5.93646 25.6783 5.81257L15.6544 1.02618C15.3652 0.888026 15.0456 0.824133 14.725 0.840362Z"
          fill={colors.primaryColor}
        />
        <path
          d="M14.8248 4.50195C14.4935 4.50199 14.2249 4.8004 14.2249 5.1685C14.2249 5.17416 14.226 5.17958 14.2261 5.18516C14.2257 5.2352 14.2233 5.29545 14.2249 5.33897C14.2328 5.55129 14.279 5.7138 14.3069 5.90942C14.3574 6.32805 14.3996 6.67511 14.3736 6.99768C14.3482 7.1193 14.2586 7.23054 14.1788 7.30786L14.1646 7.56168C13.7997 7.59172 13.4373 7.6474 13.0802 7.7283C11.5226 8.082 10.1814 8.88436 9.16039 9.96766C9.08751 9.91734 9.0153 9.86606 8.94378 9.81384C8.83664 9.82832 8.72843 9.86138 8.58741 9.77922C8.31894 9.59853 8.07443 9.3491 7.77857 9.0486C7.643 8.90487 7.54484 8.76799 7.38376 8.62943C7.34722 8.59797 7.29139 8.55543 7.25045 8.52303C7.12453 8.42266 6.97604 8.37028 6.8326 8.3654C6.64818 8.35908 6.47065 8.43119 6.35449 8.57689C6.14792 8.83592 6.21404 9.23187 6.50187 9.46133C6.50478 9.46366 6.5079 9.46547 6.51085 9.46777C6.55039 9.4998 6.59884 9.5409 6.63518 9.56773C6.8061 9.69394 6.96222 9.75855 7.13253 9.85871C7.49131 10.0803 7.78878 10.264 8.02468 10.4855C8.1168 10.5837 8.13292 10.7568 8.14519 10.8316L8.33744 11.0034C7.30817 12.5524 6.83178 14.4657 7.11333 16.4153L6.86209 16.4883C6.79585 16.5738 6.70228 16.7084 6.60441 16.7485C6.29575 16.8457 5.94837 16.8814 5.52899 16.9254C5.3321 16.9418 5.16217 16.932 4.95342 16.9716C4.90748 16.9802 4.84349 16.9969 4.7932 17.0087L4.78808 17.01C4.78533 17.0106 4.78172 17.012 4.77909 17.0126C4.42552 17.098 4.1984 17.423 4.27149 17.7432C4.34463 18.0635 4.69 18.2583 5.04571 18.1816C5.0483 18.181 5.05203 18.1809 5.0547 18.1803C5.05872 18.1794 5.06224 18.1775 5.06622 18.1765C5.11586 18.1656 5.17796 18.1535 5.22135 18.1419C5.42657 18.0869 5.57518 18.0062 5.75972 17.9355C6.15662 17.7932 6.48538 17.6742 6.80569 17.6278C6.93941 17.6174 7.08039 17.7104 7.15049 17.7496L7.41198 17.7048C8.01372 19.5704 9.2748 21.0783 10.8716 22.0245L10.7627 22.286C10.802 22.3875 10.8453 22.5249 10.816 22.6252C10.6996 22.9271 10.5001 23.2459 10.273 23.6012C10.163 23.7653 10.0505 23.8927 9.95127 24.0806C9.92752 24.1255 9.89729 24.1946 9.87436 24.2421C9.72017 24.572 9.83326 24.9519 10.1295 25.0945C10.4275 25.238 10.7974 25.0866 10.9575 24.7561C10.9577 24.7556 10.9586 24.7553 10.9588 24.7548C10.9589 24.7544 10.9586 24.7539 10.9588 24.7536C10.9816 24.7067 11.0139 24.6451 11.0331 24.601C11.1181 24.4063 11.1464 24.2394 11.2062 24.0511C11.3649 23.6524 11.4521 23.234 11.6706 22.9734C11.7304 22.902 11.828 22.8745 11.9291 22.8474L12.065 22.6013C13.4571 23.1357 15.0153 23.2791 16.5719 22.9257C16.9217 22.8461 17.2657 22.7424 17.6012 22.6154C17.6394 22.6832 17.7104 22.8134 17.7294 22.8462C17.8322 22.8796 17.9443 22.8969 18.0358 23.032C18.1992 23.3114 18.311 23.6418 18.4472 24.0408C18.507 24.2291 18.5365 24.396 18.6215 24.5907C18.6409 24.6351 18.6731 24.6976 18.6959 24.7445C18.8556 25.0762 19.2268 25.228 19.5253 25.0843C19.8214 24.9416 19.9346 24.5617 19.7803 24.2318C19.7574 24.1843 19.7259 24.1153 19.7021 24.0703C19.6029 23.8825 19.4904 23.7563 19.3804 23.5922C19.1533 23.2369 18.9649 22.9417 18.8484 22.6398C18.7997 22.4841 18.8566 22.3872 18.8946 22.286C18.8718 22.26 18.8232 22.1129 18.7946 22.0438C20.4541 21.0639 21.6781 19.4997 22.2529 17.6932C22.3306 17.7055 22.4655 17.7293 22.5093 17.7381C22.5995 17.6786 22.6825 17.6009 22.8452 17.6138C23.1654 17.6601 23.4942 17.7791 23.8911 17.9214C24.0756 17.9921 24.2242 18.0741 24.4295 18.1291C24.4729 18.1407 24.535 18.1515 24.5846 18.1624C24.5886 18.1633 24.5921 18.1653 24.5961 18.1662C24.5988 18.1668 24.6025 18.1669 24.6051 18.1675C24.9608 18.2441 25.3063 18.0494 25.3793 17.7291C25.4523 17.4089 25.2253 17.0838 24.8717 16.9985C24.8203 16.9868 24.7474 16.9669 24.6974 16.9575C24.4886 16.9179 24.3188 16.9277 24.1219 16.9113C23.7025 16.8674 23.3551 16.8316 23.0464 16.7344C22.9206 16.6856 22.831 16.5359 22.7875 16.4742L22.5452 16.4037C22.6708 15.495 22.637 14.5492 22.4196 13.6029C22.2002 12.6478 21.8125 11.7743 21.2954 11.0047C21.3575 10.9482 21.4749 10.8443 21.5082 10.8137C21.5179 10.706 21.5096 10.5932 21.621 10.474C21.8569 10.2525 22.1544 10.0688 22.5132 9.84719C22.6835 9.74698 22.8409 9.68242 23.0118 9.5562C23.0504 9.52765 23.1033 9.48245 23.1438 9.4498C23.4316 9.22026 23.4978 8.82435 23.2912 8.56536C23.0846 8.30637 22.6843 8.28192 22.3965 8.5115C22.3556 8.54395 22.3 8.58628 22.2632 8.61791C22.1022 8.75647 22.0027 8.8933 21.8671 9.03707C21.5713 9.33757 21.3267 9.58828 21.0583 9.76901C20.9419 9.83669 20.7716 9.81331 20.6942 9.80871L20.4661 9.97151C19.165 8.60724 17.3936 7.73498 15.4862 7.56554C15.4809 7.48559 15.4739 7.34113 15.4721 7.2976C15.394 7.22291 15.2997 7.15913 15.276 6.99768C15.2499 6.67511 15.2935 6.32805 15.3439 5.90942C15.3718 5.7138 15.418 5.55133 15.426 5.33897C15.4278 5.29074 15.4249 5.22068 15.4247 5.1685C15.4246 4.8004 15.1561 4.50195 14.8248 4.50195ZM14.0736 9.155L13.8954 12.3019L13.8826 12.3083C13.8707 12.5898 13.639 12.8146 13.3545 12.8146C13.238 12.8146 13.1304 12.7772 13.043 12.7133L13.0379 12.7159L10.4576 10.8867C11.2506 10.107 12.265 9.53065 13.434 9.26526C13.6452 9.21758 13.8587 9.18078 14.0736 9.155ZM15.5772 9.155C16.942 9.32285 18.2042 9.94087 19.1714 10.888L16.6078 12.7056L16.5988 12.7018C16.3713 12.868 16.0507 12.8268 15.8733 12.6044C15.8032 12.5172 15.7628 12.4098 15.758 12.298L15.7554 12.2968L15.5772 9.155ZM9.52185 12.0622L11.8779 14.1695L11.8753 14.1823C12.088 14.3672 12.1193 14.688 11.9419 14.9104C11.872 14.9982 11.7759 15.0615 11.6676 15.0911L11.6651 15.1014L8.64508 15.973C8.49138 14.5675 8.82265 13.2013 9.52185 12.0622ZM20.111 12.0634C20.4611 12.6308 20.7262 13.2646 20.884 13.9516C21.0399 14.6303 21.079 15.3079 21.0147 15.9627L17.9794 15.0886L17.9768 15.0757C17.705 15.0015 17.5379 14.725 17.6012 14.4476C17.6258 14.3386 17.6847 14.2402 17.7691 14.1669L17.7679 14.1605L20.111 12.0635V12.0634ZM14.3415 14.3323H15.3068L15.9067 15.0822L15.6913 16.0179L14.8248 16.4345L13.9557 16.0166L13.7403 15.0808L14.3415 14.3323ZM17.4359 16.8985C17.4769 16.8964 17.5177 16.9001 17.5576 16.9075L17.5628 16.901L20.6866 17.4292C20.2294 18.7136 19.3546 19.8263 18.1857 20.5709L16.9731 17.642L16.9769 17.6368C16.8656 17.378 16.977 17.0745 17.2333 16.951C17.2989 16.9195 17.3675 16.9019 17.4359 16.8985ZM12.1894 16.9113C12.4277 16.9147 12.6415 17.0801 12.697 17.3228C12.7229 17.4364 12.7103 17.5489 12.6674 17.6484L12.6765 17.6599L11.4767 20.5594C10.3549 19.8396 9.46143 18.7618 8.98348 17.4394L12.0804 16.9139L12.0855 16.9203C12.1202 16.9139 12.1553 16.9108 12.1894 16.9113ZM14.8055 18.1816C14.891 18.1787 14.976 18.1967 15.0529 18.2341C15.1579 18.2847 15.239 18.3643 15.2901 18.4597H15.3016L16.8283 21.2182C16.6278 21.2852 16.4242 21.3421 16.2181 21.3887C15.0506 21.6538 13.8867 21.5735 12.8329 21.2144L14.3556 18.4611H14.3582C14.4019 18.3794 14.4661 18.3107 14.5446 18.2617C14.6231 18.2126 14.7131 18.185 14.8056 18.1816L14.8055 18.1816Z"
          fill="black"
          stroke="black"
          strokeWidth="0.0130196"
        />
      </g>
      <defs>
        <clipPath id="clip0_790_1064">
          <rect width="29.65" height="29.65" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const PythonIcon = () => {
  return (
    <svg
      width={30}
      height={30}
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M12.0609 1.85352C10.0251 1.85352 8.37489 3.4514 8.37489 5.4225V7.89333H14.7545V8.57967H5.53951C3.50379 8.57967 1.85352 10.1776 1.85352 12.1486V17.5021C1.85352 19.4732 3.50379 21.0711 5.53951 21.0711H7.66605V18.0512C7.66605 16.0801 9.31633 14.4822 11.3521 14.4822H18.1569C19.8795 14.4822 21.2758 13.1302 21.2758 11.4623V5.4225C21.2758 3.4514 19.6256 1.85352 17.5899 1.85352H12.0609ZM11.2103 6.24611C11.915 6.24611 12.4862 5.69299 12.4862 5.01069C12.4862 4.32839 11.915 3.77527 11.2103 3.77527C10.5056 3.77527 9.93435 4.32839 9.93435 5.01069C9.93435 5.69299 10.5056 6.24611 11.2103 6.24611Z"
        fill="white"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M17.59 27.7957C19.6257 27.7957 21.276 26.1978 21.276 24.2268V21.7559H14.8963V21.0696H24.1114C26.1471 21.0696 27.7973 19.4716 27.7973 17.5006V12.1471C27.7973 10.176 26.1471 8.57812 24.1114 8.57812H21.9848V11.598C21.9848 13.5692 20.3345 15.167 18.2989 15.167H11.4939C9.77134 15.167 8.375 16.5191 8.375 18.1869V24.2268C8.375 26.1978 10.0253 27.7957 12.061 27.7957H17.59ZM18.4406 23.4031C17.7359 23.4031 17.1647 23.9562 17.1647 24.6385C17.1647 25.3208 17.7359 25.8739 18.4406 25.8739C19.1453 25.8739 19.7165 25.3208 19.7165 24.6385C19.7165 23.9562 19.1453 23.4031 18.4406 23.4031Z"
        fill="white"
      />
    </svg>
  );
};
export const JetpackIcon = () => {
  return (
    <svg
      width={30}
      height={30}
      viewBox="0 0 30 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_790_1115)">
        <path
          d="M14.9923 0.00394002C14.3788 -0.0266077 13.7695 0.120986 13.238 0.428923L3.15085 6.25144C2.65867 6.53726 2.2521 6.94979 1.97349 7.44609L6.86204 10.1269C7.0481 9.82823 7.30369 9.579 7.60699 9.40052L13.7235 5.86723C14.0541 5.67651 14.4291 5.57611 14.8107 5.57611C15.1924 5.57611 15.5673 5.67651 15.8979 5.86723L22.0144 9.40052C22.267 9.54442 22.488 9.73769 22.6643 9.96881L27.5083 7.17059C27.2427 6.79497 26.8987 6.48138 26.5002 6.25144L16.4205 0.428923C15.9858 0.178763 15.4981 0.0348401 14.9973 0.00888168L14.9923 0.00394002ZM14.8132 6.07231C14.5183 6.07223 14.2285 6.14978 13.9731 6.29715L7.85778 9.8255C7.63099 9.95781 7.43878 10.142 7.2969 10.3629L9.6689 11.6663C9.77273 11.5287 9.90292 11.4132 10.0519 11.3265L14.1782 8.94465C14.3757 8.83105 14.5995 8.77127 14.8274 8.77127C15.0552 8.77127 15.2791 8.83105 15.4766 8.94465L19.5979 11.3265C19.7074 11.3937 19.8065 11.4765 19.892 11.5724L19.9142 11.56L19.9117 11.5576L22.2306 10.2233C22.1027 10.0636 21.9465 9.92878 21.7698 9.8255L15.6545 6.29221C15.3986 6.1464 15.1089 6.07055 14.8144 6.07231H14.8132ZM27.701 7.4918L22.8582 10.2838C23.0201 10.5935 23.1049 10.9376 23.1053 11.287V18.3474C23.1053 19.122 22.6951 19.8423 22.0181 20.2351L15.9028 23.7684C15.6588 23.9067 15.3903 23.9965 15.1122 24.0328V29.6218C15.5711 29.589 16.0174 29.4571 16.4205 29.2351L26.5039 23.4126C26.9877 23.1334 27.3895 22.7319 27.669 22.2484C27.9486 21.7648 28.0959 21.2162 28.0964 20.6576V9.01507C28.0939 8.48454 27.9588 7.96304 27.7035 7.49798L27.701 7.4918ZM1.83513 7.78583C1.66143 8.17088 1.5661 8.58664 1.55469 9.00889V20.6589C1.55469 21.793 2.16128 22.8419 3.15208 23.4126L13.2356 29.2351C13.6973 29.4979 14.2177 29.6407 14.7489 29.6502V24.0526C14.3871 24.0429 14.0334 23.9431 13.7198 23.7622L7.60576 20.2364C7.27564 20.0442 7.0018 19.7686 6.81165 19.4374C6.62151 19.1061 6.52172 18.7306 6.5223 18.3486V11.287C6.52125 11.0007 6.57622 10.717 6.68414 10.4519L1.83513 7.78583ZM22.4295 10.5322L20.0946 11.8812C20.1882 12.0566 20.2406 12.2509 20.2478 12.4495V17.2133C20.2478 17.6803 20.0007 18.1028 19.5979 18.3338L15.4766 20.7182C15.3625 20.7804 15.2396 20.825 15.1122 20.8504V23.5312C15.2999 23.4979 15.4877 23.4349 15.6557 23.3373L21.7698 19.8052C22.0256 19.6575 22.238 19.445 22.3855 19.189C22.533 18.9331 22.6104 18.6428 22.6099 18.3474V11.287C22.6084 11.0263 22.5462 10.7696 22.4283 10.5371L22.4295 10.5322ZM7.12642 10.6928C7.05457 10.8826 7.01774 11.084 7.0177 11.287V18.3474C7.01722 18.6428 7.09463 18.9331 7.24212 19.189C7.38961 19.445 7.60197 19.6575 7.85778 19.8052L13.9731 23.3385C14.2128 23.4769 14.4821 23.5436 14.7477 23.5572V20.8714C14.5492 20.8647 14.3548 20.8127 14.1794 20.7194L10.0568 18.3375C9.85859 18.2245 9.69353 18.0614 9.57819 17.8645C9.46284 17.6677 9.40124 17.4439 9.39958 17.2158V12.4557C9.40004 12.2945 9.43237 12.1349 9.49471 11.9862L9.45271 11.9702L7.12642 10.6928Z"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_790_1115">
          <rect width="29.65" height="29.65" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const SolidityIcon: React.FC<IconProps> = ({ isHovered }) => {
  const hoveredColors = {
    primaryColor: "#E2E1E2",
  };

  const defaultColors = {
    primaryColor: "#fff", // Can be a different color for hover effect
  };

  const colors = isHovered ? hoveredColors : defaultColors;
  return (
    <svg
      width={39}
      height={38}
      viewBox="0 0 45 46"
      fill={colors.primaryColor}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20.477 2l-4.5 8h-9l4.5-8h9"
        style={{ isolation: "isolate" }}
        opacity="0.45"
      ></path>
      <path
        d="M15.975 10h9l-4.5-8h-9z"
        data-name="Shape"
        style={{ isolation: "isolate" }}
        opacity="0.6"
      ></path>
      <path
        d="M11.477 18l4.5-8-4.5-8-4.5 8z"
        data-name="Shape"
        style={{ isolation: "isolate" }}
        opacity="0.8"
      ></path>
      <path
        d="M11.52 30l4.5-8h9l-4.5 8h-9"
        data-name="Shape"
        style={{ isolation: "isolate" }}
        opacity="0.45"
      ></path>
      <path
        d="M16.022 22h-9l4.5 8h9z"
        data-name="Shape"
        style={{ isolation: "isolate" }}
        opacity="0.6"
      ></path>
      <path
        d="M20.52 14l-4.5 8 4.5 8 4.5-8z"
        data-name="Shape"
        style={{ isolation: "isolate" }}
        opacity="0.8"
      ></path>
    </svg>
  );
};
export const HeroImage = () => {
  return (
    <svg
      width={174}
      height={172}
      viewBox="0 0 174 172"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx={58}
        cy={28}
        r={47}
        stroke="url(#paint0_linear_780_4466)"
        strokeOpacity="0.3"
        strokeWidth={22}
      />
      <path
        d="M18 161C128.703 161 146.736 86.316 188.312 60.9516C229.888 35.5872 291 79.0144 291 79.0144"
        stroke="url(#paint1_linear_780_4466)"
        strokeOpacity="0.3"
        strokeWidth={22}
      />
      <defs>
        <linearGradient
          id="paint0_linear_780_4466"
          x1="89.3945"
          y1="-18.4323"
          x2="-1.62003"
          y2="11.2741"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.29" stopColor="#8CC5E7" />
          <stop offset={1} stopColor="white" stopOpacity={0} />
        </linearGradient>
        <linearGradient
          id="paint1_linear_780_4466"
          x1="228.385"
          y1="63.7699"
          x2="87.363"
          y2="180.12"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.29" stopColor="#8CC5E7" />
          <stop offset={1} stopColor="white" stopOpacity={0} />
        </linearGradient>
      </defs>
    </svg>
  );
};
